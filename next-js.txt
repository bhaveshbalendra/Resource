-Dynamic Routes-
using square bracket -> [userId]

-CatchAllSegments-
[...slug]
eg: if i have folder structure docs/[...slug]/page.tsx this will map all the route to page.tsx of slug folder

not-found.tsx is the page on app folder for custom not found name should be exactly same on nested folder can also be used

import {notFound} from "next/navigation"
if() {
notFound();}


private folders
start with _ and excluded in route
eg: _lib or %5Flib


route group ()
this is omitted from the route
eg (auth) inside login register forgot password

layout

Link extend <a> but link dont refesh like a when redirect
import Link from "next/Link"

<Link href="/blog">Blog</Link>


<Link href="/blog" replace>Blog</Link> remove history


import { useRouter } from "next/navigation";
  const router = useRouter();
 function handleClick() {
    router.push("/");
  }

template.tsx(refresh page) vs layout.tsx


loading.tsx wrap page.tsx 


error.tsx bubble up and on nested child
in page
  if (random === 1) {
    throw new Error("loading review");
  }

in error
"use client"
import React from "react";

export default function ErrorBoundary({
  error,
  reset,
}: {
  error: Error;
  reset: () => void;
}) {
  return (
    <div>
      {error.message} <button onClick={reset}></button>
    </div>
  );
}

if layout and error on same folder adjacent when error in layout it will not show to handle this put the error on the parent folder


parallel routes
using slot @foldername
this slot are passed to its corresponding layout.tsx file
independent routes ,error ,loading,sub navigation,
navigaton with route

-Handle Unmatched Routes-

The default.tsx file is nextjs serves as a fallback to render content when the same framework cannot retrieve the slot acting state from the current URL

Navigation from the UI in the case of Navigator within a UI next.js details the previous active state of a slot regardless of change in URL

page reader :
Next JS immediately search for the default.tsx file within each unmatched slot 
The presence of this file is critical as it provides the default content that next JS will render in the user interface
 if the default.tsx file is missing in any of the unmatched slots for the current route next js will render 404 error


Intercepting Routes Conventions
folder same place 
(.)f2
f2

Route Handlers
route.ts
make folder api and put it in
export async function GET() {
  return Response.json(comments);
}
export async function GET() {
    
  return new Response("GET  handler");
}

it has request and context as paramaeter GET PATCH DELETE


caching in route handlers 
auto cached in et method



